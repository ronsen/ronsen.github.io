import{O as g,P as A,Q as D,R as S,S as T,T as L,U as Y,v as B,V as U,W as j,X as K,Y as M,F as N,E as $,Z,_ as q,$ as c,a0 as I,a1 as R,a2 as z}from"./CkvwaIBb.js";let p=!1;function C(e){var r=p;try{return p=!1,[e(),p]}finally{p=r}}const F={get(e,r){if(!e.exclude.includes(r))return e.props[r]},set(e,r){return!1},getOwnPropertyDescriptor(e,r){if(!e.exclude.includes(r)&&r in e.props)return{enumerable:!0,configurable:!0,value:e.props[r]}},has(e,r){return e.exclude.includes(r)?!1:r in e.props},ownKeys(e){return Reflect.ownKeys(e.props).filter(r=>!e.exclude.includes(r))}};function V(e,r,t){return new Proxy({props:e,exclude:r},F)}const G={get(e,r){let t=e.props.length;for(;t--;){let n=e.props[t];if(c(n)&&(n=n()),typeof n=="object"&&n!==null&&r in n)return n[r]}},set(e,r,t){let n=e.props.length;for(;n--;){let i=e.props[n];c(i)&&(i=i());const u=g(i,r);if(u&&u.set)return u.set(t),!0}return!1},getOwnPropertyDescriptor(e,r){let t=e.props.length;for(;t--;){let n=e.props[t];if(c(n)&&(n=n()),typeof n=="object"&&n!==null&&r in n){const i=g(n,r);return i&&!i.configurable&&(i.configurable=!0),i}}},has(e,r){if(r===I||r===R)return!1;for(let t of e.props)if(c(t)&&(t=t()),t!=null&&r in t)return!0;return!1},ownKeys(e){const r=[];for(let t of e.props)if(c(t)&&(t=t()),!!t){for(const n in t)r.includes(n)||r.push(n);for(const n of Object.getOwnPropertySymbols(t))r.includes(n)||r.push(n)}return r}};function W(...e){return new Proxy({props:e},G)}function X(e,r,t,n){var O;var i=!$||(t&Z)!==0,u=(t&M)!==0,y=(t&z)!==0,f=n,v=!0,b=()=>(v&&(v=!1,f=y?N(n):n),f),l;if(u){var E=I in e||R in e;l=((O=g(e,r))==null?void 0:O.set)??(E&&r in e?s=>e[r]=s:void 0)}var o,h=!1;u?[o,h]=C(()=>e[r]):o=e[r],o===void 0&&n!==void 0&&(o=b(),l&&(i&&A(),l(o)));var a;if(i?a=()=>{var s=e[r];return s===void 0?b():(v=!0,s)}:a=()=>{var s=e[r];return s!==void 0&&(f=void 0),s===void 0?f:s},i&&(t&D)===0)return a;if(l){var x=e.$$legacy;return function(s,_){return arguments.length>0?((!i||!_||x||h)&&l(_?a():s),s):a()}}var P=!1,d=((t&q)!==0?j:K)(()=>(P=!1,a()));u&&S(d);var m=B;return function(s,_){if(arguments.length>0){const w=_?S(d):i&&u?T(s):s;return L(d,w),P=!0,f!==void 0&&(f=w),s}return Y&&P||(m.f&U)!==0?d.v:S(d)}}export{X as p,V as r,W as s};
